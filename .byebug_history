exit
pro
exit
product_array[0][:title]
product_array[0][:spec]
book[:spec]
exit
book
product_array[0]
exit
product_array[0]
exit
product_array[1]
exit
product_array[1]
exit
product_array[0]
exit
book_author = book_parsed_page.css('div.col.author_des').text.strip.delete_suffix('Read More').strip
book_spec = book_parsed_page.css('div.details-book-additional-info__content-summery.truncate').text.gsub(/\n/,"").strip
book_parsed_page = Nokogiri::HTML(book_unparsed_page.body)
book_unparsed_page = HTTParty.get(book_url)
book_url = product_array[0][:url]
exit
b2.strip
b2
b2.slice!"Read More"
b2=book_parsed_page.css('div.col.author_des').text.gsub(/\n/,"").strip
b2
b2=book_parsed_page.css('div.col.author_des').text.gsub(/\n/,"").strip.slice! "Read More"
b2=book_parsed_page.css('div.col.author_des').text.gsub(/\n/,"").strip
b2=book_parsed_page.css('div.col.author_des').text.gsub(/\n/Read More/,"").strip
b2=book_parsed_page.css('div.col.author_des').text.gsub(/\nRead More/,"").strip
b2=book_parsed_page.css('div.col.author_des').text.gsub(/\n/,"").strip
b2=book_parsed_page.css('div.col.author_des').text.gsub(/\n/,"")
b2  = book_parsed_page.css('div.col.author_des').text
b2 = = book_parsed_page.css('div.col.author_des').text
b2= book_parsed_page.css('div.details-book-additional-info__content-author.truncate').text.gsub(/\n/,"").strip
b1= book_parsed_page.css('div.details-book-additional-info__content-summery.truncate').text.gsub(/\n/,"").strip
b1.strip
b1= book_parsed_page.css('div.details-book-additional-info__content-summery.truncate').text.gsub(/\n/,"")
b1= book_parsed_page.css('div.details-book-additional-info__content-summery.truncate').text(byebug) b1.gsub(/\n/,"")
b1.gsub(/\n/,"")
b1
b1= book_parsed_page.css('div.details-book-additional-info__content-summery.truncate').text
b
b= book_parsed_page.css('div.details-book-additional-info__content-summery.truncate').text
b= book_parsed_page.css('div.details-book-additional-info__content-summery.truncate')
b= book_parsed_page.css('div.details-book-additional-info__content-summery.truncate').text
b= book_parsed_page.css('div.details-book-additional-info__content-summery truncate').text
b= book_parsed_page.css('div.details-book-additional-info_content-summery.truncate').text
b= book_parsed_page.css('div.details-book-additional-info_content-summert.truncate').text
b= book_parsed_page.css('a#book-additional-description-tab').text
b= book_parsed_page.css('div.details-book-additional-info__content').text
b= book_parsed_page.css('div.details-book-additional-info_content').text
b= book_parsed_page.css('div.col').text
book_parsed_page = Nokogiri::HTML(book_unparsed_page.body)
book_unparsed_page = HTTParty.get(book_url)
book_url = product_array[0][:url]
exit
book_url
book_ur;
book_unparsed_page = HTTParty.get(book_url)
book_url = product_array[0][:url]
exit
book_unparsed_page = HTTParty.get(book_url)
book_url = product_array[0][:url]
product_array.count
product_array[1][:url]
product_array[0][:url]
product_array.[0][:url]
continue
product_array.last[:url]
product_array.count
exit
product_array.last
product_array.count
product_array.first[:url]
product_array.last[:url]
exit
product_array.last[:url]
product_array.first[:url]
exit
last_page = (total_products.to_f / per_page.to_f).ceil.to_i
last_page = (total_products.to_f / per_page.to_f).ceil.to_f
last_page = (total_products.to_f / per_page.to_f).ceil
per_page = product_array.count
total_products = parsed_page.css('div.col-lg-12').text.split(' ')[-2].to_i
exit
last_page = 1+(total_products.to_f / per_page.to_f).round
last_page = (total_products.to_f / per_page.to_f).round
per_page = product_array.count
total_products = parsed_page.css('div.col-lg-12').text.split(' ')[-2].to_i
total_products = parsed_page.css('div.col-md-6.rs-none.text-right').text.split[-3].to_i
parsed_page.css('div.col-lg-12').text.split(' ')[-2].to_i
parsed_page.css('div.col-lg-12').text.split(' ')[-2]
parsed_page.css('div.col-lg-12').text.split(' ')[-1]
parsed_page.css('div.col-lg-12').text.split(' ')
parsed_page.css('p').text.split(' ')
parsed_page.css('p')
parsed_page.css('p').text.split[-3].to_i
product_array.count
product_array.first
product_array.last
exit
product[:url]
product[:discounted_price]
product[:original_price]
product[:author]
product[:title]
continue
product[:url]
product[:discounted_pric]
product[:discounted_price]
product[:original_price]
product[:author]
product[:title]
continue
j_f.css('span').text
j_f.css('strike.original-price.pl-2').text
j_f.css('p.book-author').text
j_f.css('p.book-author')
j_f.css('a')[0].attributes["href"].value
j_f.css('p.book-title').text
j_f.css('p.book-title')
j_f = j.first
j
j-f = j.first
j.count
j=parsed_page.css('div.book-list-wrapper')
continue
j.count
j=parsed_page.css('div.book-list-wrapper')
