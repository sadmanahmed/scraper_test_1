exit
last_page = (total_products.to_f / per_page.to_f).ceil.to_i
last_page = (total_products.to_f / per_page.to_f).ceil.to_f
last_page = (total_products.to_f / per_page.to_f).ceil
per_page = product_array.count
total_products = parsed_page.css('div.col-lg-12').text.split(' ')[-2].to_i
exit
last_page = 1+(total_products.to_f / per_page.to_f).round
last_page = (total_products.to_f / per_page.to_f).round
per_page = product_array.count
total_products = parsed_page.css('div.col-lg-12').text.split(' ')[-2].to_i
total_products = parsed_page.css('div.col-md-6.rs-none.text-right').text.split[-3].to_i
parsed_page.css('div.col-lg-12').text.split(' ')[-2].to_i
parsed_page.css('div.col-lg-12').text.split(' ')[-2]
parsed_page.css('div.col-lg-12').text.split(' ')[-1]
parsed_page.css('div.col-lg-12').text.split(' ')
parsed_page.css('p').text.split(' ')
parsed_page.css('p')
parsed_page.css('p').text.split[-3].to_i
product_array.count
product_array.first
product_array.last
exit
product[:url]
product[:discounted_price]
product[:original_price]
product[:author]
product[:title]
continue
product[:url]
product[:discounted_pric]
product[:discounted_price]
product[:original_price]
product[:author]
product[:title]
continue
j_f.css('span').text
j_f.css('strike.original-price.pl-2').text
j_f.css('p.book-author').text
j_f.css('p.book-author')
j_f.css('a')[0].attributes["href"].value
j_f.css('p.book-title').text
j_f.css('p.book-title')
j_f = j.first
j
j-f = j.first
j.count
j=parsed_page.css('div.book-list-wrapper')
continue
j.count
j=parsed_page.css('div.book-list-wrapper')
