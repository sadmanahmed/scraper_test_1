exit
p.css('img')[0].attributes["src"].text
p.text
p = pagination_parsed_page.css('div.product_single')
exit
continue
publisher
product_array
exit
total_products
continue
st
continue
st
exit
c
c.merge
exit
b1["à§§"]
b1[à§§]
b1[0]
z.each {|x| b1[x] }
z.each {|x| b1[z[x]] }
z.each {|x| puts x=x.to_s }
z.each {|x| puts x=x.to_i }
z.each {|x| print x=x.to_i }
z.each {|x| x=x.to_i }
z.each {|x| x }
z
z.each {|x| b1[z[x]] }
z.each {|x| b1[z[x] }
z.each {|x| puts x }
z.each do |x|
z
exit
b1[1]
b1
exit
b
exit
num.nil?
num..nil?
num.value? == nil
num.values == nil
num.value == nil
num.length
ban[0]
x[0]
ban
x
exit
num.split
num.to_a
ban.class
x.class
x.to_a
x
x=ban.split
c
c=ban.split
b
b=ban.split
ban.split!
ban.split.join(',')
ban
ban.join(',')
ban.split(',')
ban.split
ban.slice(',')
ban.strip(',')
ban.strip(,)
c
exit
b
a
exit
b
a
exit
a
exit
continue
exit
exiy
pagination_pub_list[0].css('div.category_info_ct_block').text
pagination_pub_list[0].css('div.category_info_ct_block')
pagination_pub_list[0].css('div.category__info__ct__block')
pagination_pub_list[0]
continue
x
continue
x
continue
x
continue
x
exit
publisher_array.count
continue
publisher_array.count
exit
pub_list.count
b12
url
a12
a
continue
a12
b12
b
a
exit
parsed_page.css('li.page-item.disabled')[0].attributes["aria-disabled"].value
parsed_page.css('li.page-item.disabled')
parsed_page.css('a.page-link')[0]
parsed_page.css('a.page-link').text
parsed_page.css('a.page-link')
parsed_page.css('a.page-link')[0].attributes["href"].value
parsed_page.css('li.page-item.disabled')
parsed_page.css('page-item.disabled')
parsed_page.css('li.page-ite,.disabled')
parsed_page.css('li').
parsed_page.css('li.page-item.disabled').
parsed_page.css('li.page-ite,.disabled')
parsed_page.css('a.page-link')[0].attributes["href"].value
pub_list[0].text
pub_list[0]
pub_list.count
parsed_page.css('a.page-link')[0].attributes["href"].value
url
exit
parsed_page.css('a.page-link')[0]
parsed_page.css('a.page-link')[0].attributes["href"].value
pub_list.count
url
a
exit
url =" https://www.prothoma.com/publisher?page=22"
url = https://www.prothoma.com/publisher?page=22
url
a
exit
a.empty?
a[0]
a
a.value?
a.value
a= parsed_page.css('a.page-link')[0].attributes["href"].value
parsed_page.css('a.page-link')[0].attributes["href"].value
parsed_page.css('a.page-link')[0]
parsed_page.css('a.page-link').href
parsed_page.css('a.page-link')
parsed_page.css('#appMain > div.wrapper > div.content > div > div:nth-child(4) > div > div > nav > ul > li:nth-child(14) > a')
exit
url
continue
url
exit
pub_url.values[0]+"?page=1"
pub_url.values[0]
pub_url.values
pub_url.value
pub_url
exit
publisher_array.first.values
publisher_array.first.values.text
publisher_array.first.values
publisher_array.count
exit
pagination_pub_list.count
pagination_pub_list
publisher_array.count
publisher_array[1].values
continue
publisher_array[0].values
publisher_array[0]
publisher_array
exit
unparsed_page = HTTParty.get(pagination_url)
pagination_url = x
x
exit
publisher_array[0].values
publisher_array[0].value
publisher_array[0]
publisher_array.count
exit
pub_list.css('a')[1].attributes["href"].value
pub_list.css('a')[1].attributes["href"].value.text
pub_list.css('a')[1].attributes["href"].value
pub_list.css('a')[1]
pub_list.css('a')[1].attributes["href"].text
pub_list.css('a')[0].attributes["href"].text
pub_list.each do |publisher|
publisher_array = Array.new
pub_list = parsed_page.css('div.category_list_single_block')
url
exit
pub_list[0].css('a')[0].attributes["href"].text
pub_list[0].text
pub_list
url
url= url+"?page=1"
https://www.prothoma.com/publisher
url
pub_list.count
exit
url
exit
url= url+"?page=1"
url= url+"{?page=1}"
url
exit
x
continue
x
continue
x
continue
x
exit
page
a
pagination_url
continue
pagination_url
a
exit
pagination_url
a
continue
a
exit
url
a
pagination_url
exit
url
a.delete_suffix!(a[-1]) + "#{page}"
exit
url
a= url
a.delete_suffix!(a[-1]) + "#{page}"
a.delete_suffix!(a[-1])+page
a.delete_suffix!(a[-1])
a[-1]
a.class
a.last
a
a.delete(-1)
a.delete_last
page
a
exit
a
exit
